plugins {
    id 'java'
    id 'org.springframework.boot' version '3.2.0'
    id 'io.spring.dependency-management' version '1.1.4'
    // openapi-gradle-plugin 추가
    id 'org.springdoc.openapi-gradle-plugin' version '1.8.0'
}

group = 'com.demo'
version = '0.0.1-SNAPSHOT'

java {
    sourceCompatibility = '17'
}

// annotationProcessor 추가
configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}


repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-security'
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.2.0'
    implementation 'io.jsonwebtoken:jjwt-api:0.11.5'
    implementation 'org.mapstruct:mapstruct:1.5.5.Final'

    implementation 'nz.net.ultraq.thymeleaf:thymeleaf-layout-dialect'

    compileOnly 'org.projectlombok:lombok'
    runtimeOnly 'com.h2database:h2'
    runtimeOnly 'io.jsonwebtoken:jjwt-impl:0.11.5'
    runtimeOnly 'io.jsonwebtoken:jjwt-jackson:0.11.5'

    developmentOnly 'org.springframework.boot:spring-boot-devtools'
    annotationProcessor 'org.projectlombok:lombok'
    annotationProcessor 'org.mapstruct:mapstruct-processor:1.5.5.Final'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.springframework.security:spring-security-test'
}
// openApi doc compile 추가
openApi {
    apiDocsUrl.set("http://localhost:8080/v3/api-docs")
    outputDir.set(file("$buildDir"))
    outputFileName.set("openapi.yaml")
    waitTimeInSeconds.set(10)

    customBootRun {
    }
}

tasks.named('test') {
    useJUnitPlatform()
}
